<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC Client-to-Client Protocol">Internet Relay Chat: Client-to-Client Protocol</title>

    <author initials="M." surname="Mikulenas" fullname="Mantas Mikulenas">
      <organization></organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley" role="editor">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2017" month="April" day="20"/>

    
    
    

    <abstract>


<t>The Client-to-Client Protocol (CTCP) lets IRC clients send each other messages that get displayed or responded to in special ways. CTCP is widely used today, with some IRC networks requiring that clients support it in order to connect to them. This document goes over CTCP as it is used today, and the most common message types in use.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> only have a single user messaging type, and do not provide a way for clients to exchange information directly. CTCP messages let clients exchange messages that get displayed or responded to in special ways. Some examples of how CTCP is used today is to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients.</t>

<t>This document goes over the subset of CTCP which is commonly implemented, and is compatible with clients implementing CTCP as it’s described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The PRIVMSG and NOTICE messages are used to transmit CTCP frames. To create a CTCP message, you simply replace the body (i.e. the text to be sent) of a PRIVMSG / NOTICE with the following:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim   = %x01

  command = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and " "

  params  = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body    = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>The final <spanx style="verb">delim</spanx> SHOULD be sent for compatibility reasons, and software MUST accept incoming messages which lack it. This is due to how some software incorrectly implements message splitting.</t>

<t>CTCP queries are sent with PRIVMSG, and replies are sent with NOTICE. In addition, CTCP queries sent to channels always generate private replies.</t>

<t>Here are two examples of CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :dx PRIVMSG SaberUK :\x01VERSION\x01
  :SaberUK NOTICE dx :\x01VERSION Snak for Macintosh 4.13 English\x01

  :mt PRIVMSG #ircv3 :\x01PING 1473523796 918320\x01
  :Jobe NOTICE mt :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="message-types" title="Message Types">

<t>CTCP messages generally take on one of these types. These message types are defined here for informational purposes (to simplify understanding), and aren’t specified or differentiated by the protocol itself.</t>

<t>Channel-directed CTCPs should never cause an error reply.</t>

<section anchor="extended-formatting" title="Extended formatting">

<t>This type of CTCP is used to request special formatting of a user-visible message. That is, to send a user-visible message that should be displayed differently from regular messages - e.g. as an action, a whisper, an announcement.</t>

<t>Extended formatting CTCPs are sent as a PRIVMSG. There is no automatic response to this message type, as it is not a query nor reply.</t>

<t>Extended formatting CTCPs are expected to be used in channels as well as between clients. However, many servers implement optional filtering to block CTCPs in channels (apart from ACTION). Because of this, any future extended-formatting CTCPs may be restricted to private messages.</t>

<t>These CTCP messages are sent as a PRIVMSG and generate no reply.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :dan- PRIVMSG #ircv3 :\x01ACTION writes the best specs!\x01
]]></artwork></figure>

</section>
<section anchor="metadata-query" title="Metadata Query">

<t>This type of CTCP is used to provide static information about the target client, user or connection.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively). Due to how bouncers interact with multiple clients, there may sometimes be multiple responses to queries.</t>

<t>Metadata queries MUST NOT require the recipient to implement any side effects (beyond sending the reply itself); if a CTCP message causes side effects by design, it should be categorized as an extended query instead.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :dx PRIVMSG SaberUK :\x01VERSION\x01
  :SaberUK NOTICE dx :\x01VERSION SaberChat 27.5\x01
]]></artwork></figure>

</section>
<section anchor="extended-query" title="Extended Query">

<t>This type of CTCP is used to provide dynamic information or invoke actions from the client.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively).</t>

<t>Queries sent to a channel always generate private replies.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :mt PRIVMSG Jobe :\x01PING 1473523796 918320\x01
  :Jobe NOTICE mt :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
</section>
<section anchor="ctcp-messages" title="CTCP Messages">

<t>This section lists those CTCP messages which are commonly seen in use today.</t>

<t>Extended formatting messages can have parameters, but do not generate any reply.</t>

<t>Metadata queries do not have any parameters, but expect a reply with parameters as the response data.</t>

<t>Extended queries and replies may have parameters.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Type:    Extended Formatting
Params:  ACTION <text>
]]></artwork></figure>

<t>This extended formatting message shows that <spanx style="verb">&lt;text&gt;</spanx> should be displayed as a third-person action or emote; in clients, it’s generally activated with the command /me.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION writes\x01

  Formatted:  * dan writes
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  CLIENTINFO <token>{ <token>}
]]></artwork></figure>

<t>This metadata query returns a list of the CTCP messages that this client supports and implements.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     CLIENTINFO
  Response:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  DCC <type> <argument> <host> <port>
]]></artwork></figure>

<t>DCC (the Direct Client-to-Client protocol) is used to setup and control connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients or simply wish to bypass the server itself such as file transfer and direct chat.</t>

<t>Explaining DCC requires its own specification, and is not described here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  FINGER <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return the client name and version instead.</t>

<t>FINGER is widely implemented, but largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     FINGER
  Response:  FINGER WeeChat 1.5
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  PING <info>
]]></artwork></figure>

<t>This extended query is used to confirm reachability with other clients and to check latency. When receiving a CTCP PING, the reply must contain exactly the same parameters as the original query.</t>

<t>PING is universally implemented. Clients MUST implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     PING 1473523721 662865
  Response:  PING 1473523721 662865
  
  Query:     PING foo bar baz
  Response:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  SOURCE <info>
]]></artwork></figure>

<t>This metadata query is used to return the location of the source code for the client.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     SOURCE
  Response:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  TIME <timestring>
]]></artwork></figure>

<t>This extended query is used to return the client’s local time in an unspecified human-readable format. We recommend ISO 8601 format, but raw ctime() output appears to be the most common in practice.</t>

<t>New implementations SHOULD default to UTC time for privacy reasons.</t>

<t>TIME is almost universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     TIME
  Response:  TIME 2016-09-26T00:45:36Z
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>This metadata query is used to return the name and version of the client software in use. There is no specified format for the version string.</t>

<t>VERSION is universally implemented. Clients MUST implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     VERSION
  Response:  VERSION WeeChat 1.5-rc2 (git: v1.5-rc2-1-gc1441b1)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  USERINFO <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return <spanx style="verb">&lt;nickname&gt; (&lt;realname&gt;)</spanx> instead.</t>

<t>USERINFO is widely implemented, but largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     USERINFO
  Response:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1459" target='http://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author initials='J.' surname='Oikarinen' fullname='J. Oikarinen'><organization /></author>
<author initials='D.' surname='Reed' fullname='D. Reed'><organization /></author>
<date year='1993' month='May' />
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference  anchor="RFC2812" target='http://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author initials='C.' surname='Kalt' fullname='C. Kalt'><organization /></author>
<date year='2000' month='April' />
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>




    </references>




  </back>

<!-- ##markdown-source:
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
AOe9/3pISmKjJ75UHl2cNpoJGgGauRmb7jcWrWwsg1gcEXuh79HV7ipOqyLq
hRLmXk7bW2PDmVSzY25azmUmbJGdzKNbCchvScxL7VgmQ1hUOLeftFmFaMUr
VPE1BfOehKmEPdKe0NJW8HJkZs6LFllOatne9c0CF0HulTC20rU8O/GVDeKl
zHzeeVwxoTSIXF/xkefQLg+hma/Q4yGMu01RHHGKEE6oiiORfNHKZqnT8GSF
ri6tj1BQKKmOOo0IUVDrgZUV3BSEAoRt1M6ralIle0Mf6UUd2EwXOpTBBrGM
Y/KmAh3EqM7rI7UwpAkUc2p4lySip8iNz4Ue31CSnhDt8kRgWEhd6JcupWtD
QeH8Q//k5TCxaJWv3uU6t07J5Fas/XcKKz3mnnTrs96zZSTW3PFLkJgsoMhu
QJEL2JVBHfTUaX2ekzt9wH9fAHY6X9+QPrIingdonxXHtzQGK4ffT2GwO4LM
sMFF1qesgOyh9n1qVjjMS1NisrrxtMTc/tjCd9N3VIZ6jhhQ5CMG1uVo10rk
5Ah8Eg4Uan9RzlR0uJJ8YbA/q8DAm5P58sMhpaRiKmjGUEb4jAvxprnbht+i
O5kxbhge1IinYB9FfxKJf/Vc+41EecutCB4H0t6hpu+VDwqHQN3tOcrteTgH
eedffHer5GDooqiVSQQBYU2lKihXVGac+pzLY0WH2kHFtVUljb5i9Vb3mlVL
9Tijs6lgPGVorqk082utEwh22xWlVQ0TyuVeOCIM1Nmwo6sTtBJeq7lxKueD
qj2kYvgJ1ZovpnSSdm9VrDR8iIRKMNOndLAZnje8NDw82Ds+PzjeP1mO5o3K
eUqgwv1mOEIJEspfva8uPrSimrXRS6CGzMgpSpRpQbnfyDQOM/vFB6o6lfSQ
bNo8ktKNEc3xZysajdtDu/rLHM879q5veQcBCbmz7Ibg993hsH2XCen84GhP
hOLQeBwj70oc7+s6Z2jOHaoRr8QOZAef/+CSIIAPck7IJBq4Ti7d5eZi9WC6
akc22lXGIioFexfqxZVoVhoVUx0/mvrw8qZoBessCmltVcvpoNkL16aDh+06
5lzhNan5GitJkjPMXwkJAIN0lZAZNI0HSCnHY5S+G6tSSoeTpTl6VVbBbIY/
NOT1g6AAgIi67fJRpD/J9W5C3fLdBXhE57QRcmSwiZoBLDfPq3YvlqFT8WeN
RMbNkRsprJ4PxD2QPHr93T14JJDsAz97pw9KST9U7JBIeHV/DmbaxmhDZK7M
zLKyaKlbophuK2zsVFD/kgKhyDGDTlWa+ANKpalLkikdIMHfuE8HHVVTw6c3
9Z6lx5e3p6Vb+IebikjpJ66WYAt7vNW1vvwxfvDAjKxJUap+icM/QgAhDkvJ
H4z5VinWev3esya5Ke8fmN1MEStRu6lZm3RFco51Sf20BHDDcdvqubr/zYVO
pBSaQ/rhMI8XPfHtFEkE1Ct9RUAPOpts6LakeDbj32kQJE3yWXLi1yBYlROQ
2xM+H2Rr4Ure1N118jcVxFZYlvTeVl9sb2893362HKY7x9wy1diAR2SJv59u
maT9tI702cnF6XDvQRnqh96boUtnN3VyoMcPwt9XTWtmZUwCJfGnWUvCP6yE
mUpo1l9PQR9xfdj3kpfCslPnCjt4/BiEzdRqysnjBAyaGpk0jqOq+MAU4QK6
ww2ro0OPhyXKCrMwWZEfU0FzEWVBCc3y5hxvOoPai5BZiaRDLs91SBpub/mX
8UQcnJ2I59ub/fDU004p5yKmSdc3BEi0wC1ZFEqWNhwD3fz1E2sX1KvrmPx8
rOYrxBg0S6LGEg06TXNxPvSGU7y5qYrrg3bq9shLmo6eeaF7U++3iiIO4FL8
2YKtzf52tPki2to+39wcPH02eLL9lybqlQx6SL5U/fQO7WMl8A/KmpVaErKn
0pbNTwn88/PSgWEDCx/pOs2qubxNcFJl6O9PeJX7ltxeLd+qRFEZb4n1iXYD
cRW+Rv1oEvefPu2P+htNPC7O9k4frPqrwf+vIuPdTq7jS3rvlVjfqeZ4tfGu
JTHqPf7vRUYdi6Xo1gaNS0Bxfb/kztqgEPkw/gcZjm1apCQAAA==

-->

</rfc>


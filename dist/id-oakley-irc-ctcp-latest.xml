<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC Client-to-Client Protocol">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulenas" fullname="Mantas Mikulenas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2017" month="May" day="08"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets IRC clients send each other messages that get displayed or responded to in special ways. CTCP is widely used, with some IRC networks requiring that clients support it in order to connect to them. This document details how to implement CTCP and lists the most common messages.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> only has a single command for regular user messages, and does not provide a way for clients to exchange information directly. Client-to-Client Protocol (CTCP) messages let clients exchange messages that get displayed or responded to in special ways. Some examples of how CTCP is used is to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients.</t>

<t>This document goes over the subset of CTCP which is commonly implemented, and is compatible with clients implementing CTCP as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The PRIVMSG and NOTICE messages are used to transmit CTCP frames. To create a CTCP message, you simply replace the body (i.e. the text to be sent) of a PRIVMSG / NOTICE with the following:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim   = %x01

  command = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and " "

  params  = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body    = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final <spanx style="verb">delim</spanx> SHOULD be sent on outgoing messages for compatibility reasons, and software MUST accept incoming messages which lack it. This is due to how certain clients implement message splitting and truncation.</t>

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command.</t>

<t>Queries MAY be sent to channels. When these queries are responded to, the responses are sent to the querying client rather than the channel which the query was originally sent to.</t>

<t>Here are two examples of CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01VERSION\x01
  :bob NOTICE alice :\x01VERSION Snak for Macintosh 4.13 English\x01

  :alice PRIVMSG #ircv3 :\x01PING 1473523796 918320\x01
  :bob NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="message-types" title="Message Types">

<t>CTCP messages generally take on one of these types. These message types are defined here to simplify understanding, and aren’t differentiated by the protocol itself.</t>

<section anchor="extended-formatting" title="Extended formatting">

<t>This type of CTCP is used to request special formatting of a user-visible message. That is, to send a user-visible message that should be displayed differently from regular messages - e.g. as an action, a whisper, an announcement.</t>

<t>Extended formatting messages are sent as a PRIVMSG, and are expected to be used in channels as well as between clients. There is no automatic response to this message type, as it is not a query nor reply.</t>

<t>These messages are sent as a PRIVMSG and can have parameters, but generate no reply.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :dan PRIVMSG #ircv3 :\x01ACTION writes some specs!\x01
]]></artwork></figure>

</section>
<section anchor="metadata-query" title="Metadata Query">

<t>This type of CTCP is used to provide static information about the target client, user or connection.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively). Due to how bouncers interact with multiple clients, there may sometimes be multiple responses to queries.</t>

<t>Metadata queries MUST NOT require the recipient to implement any side effects (beyond sending the reply itself); if a CTCP message causes side effects by design, it should be categorized as an extended query instead.</t>

<t>Metadata queries do not have any parameters, but expect a reply with parameters as the response data.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01VERSION\x01
  :bob NOTICE alice :\x01VERSION SaberChat 27.5\x01
]]></artwork></figure>

</section>
<section anchor="extended-query" title="Extended Query">

<t>This type of CTCP is used to provide dynamic information or invoke actions from the client.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively).</t>

<t>Queries sent to a channel always generate private replies.</t>

<t>Extended queries and replies may have parameters.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01PING 1473523796 918320\x01
  :bob NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
</section>
<section anchor="messages" title="Messages">

<t>CTCP messages themselves are not standardised. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and produce no response to the sending user. Clients MAY receive more than one response per user for a query they send, due to multiple clients being connected behind an IRC bouncer.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification. Thanks to Khaled for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting which is complex and not widely implemented. Implementations SHOULD NOT implement low-level quoting or CTCP-level quoting when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be attacked or spammed more easily.</t>

<t>CTCP requests can be abused to flood clients off a server. Clients may ignore or throttle excessive incoming requests to protect against this.</t>

<t>Many servers implement optional filtering to prevent any CTCP messages apart from ACTION from being sent to channels. When this is done, it can typically be enabled or disabled by channel operators with a channel mode.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1459" target='http://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author initials='J.' surname='Oikarinen' fullname='J. Oikarinen'><organization /></author>
<author initials='D.' surname='Reed' fullname='D. Reed'><organization /></author>
<date year='1993' month='May' />
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference  anchor="RFC2812" target='http://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author initials='C.' surname='Kalt' fullname='C. Kalt'><organization /></author>
<date year='2000' month='April' />
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC5322" target='http://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The reply and parameter lines below use a simplified syntax that represents variables by surrounding them with angle brackets, and represents repeating segments by surrounding them with curly brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Type:    Extended Formatting
Params:  ACTION <text>
]]></artwork></figure>

<t>This extended formatting message shows that &lt;text&gt; should be displayed as a third-person action or emote; in clients, it’s generally activated with the command <spanx style="verb">/me</spanx>.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  CLIENTINFO <token>{ <token>}
]]></artwork></figure>

<t>This metadata query returns a list of the CTCP messages that this client supports and implements, delimited by a single ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     CLIENTINFO
  Response:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  DCC <type> <argument> <host> <port>
]]></artwork></figure>

<t>DCC (the Direct Client-to-Client protocol) is used to setup and control connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients or simply wish to bypass the server itself such as file transfer and direct chat.</t>

<t>DCC requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  FINGER <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     FINGER
  Response:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  PING <info>
]]></artwork></figure>

<t>This extended query is used to confirm reachability with other clients and to check latency. When receiving a CTCP PING, the reply MUST contain exactly the same parameters as the original query.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     PING 1473523721 662865
  Response:  PING 1473523721 662865
  
  Query:     PING foo bar baz
  Response:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  SOURCE <info>
]]></artwork></figure>

<t>This metadata query is used to return the location of the source code for the client.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     SOURCE
  Response:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  TIME <timestring>
]]></artwork></figure>

<t>This extended query is used to return the client’s local time in an unspecified human-readable format. In practice, both the format output by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common.</t>

<t>New implementations MAY default to UTC time for privacy reasons.</t>

<t>TIME is almost universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     TIME
  Response:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>This metadata query is used to return the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     VERSION
  Response:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  USERINFO <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return <spanx style="verb">&lt;nickname&gt; (&lt;realname&gt;)</spanx> instead.</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     USERINFO
  Response:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>


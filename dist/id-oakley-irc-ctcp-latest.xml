<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC Client-to-Client Protocol">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulenas" fullname="Mantas Mikulenas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2017" month="May" day="08"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> only has a single command for regular user messages, and does not provide a way for clients to exchange information directly. Client-to-Client Protocol (CTCP) messages let clients exchange messages that get displayed or responded to in special ways. Some examples of how CTCP is used is to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients.</t>

<t>This document goes over the subset of CTCP which is commonly implemented, and is compatible with clients implementing CTCP as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The PRIVMSG and NOTICE messages are used to transmit CTCP frames. To create a CTCP message, you simply replace the body (i.e. the text to be sent) of a PRIVMSG / NOTICE with the following:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim   = %x01

  command = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and " "

  params  = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body    = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final <spanx style="verb">delim</spanx> SHOULD be sent on outgoing messages for compatibility reasons, and software MUST accept incoming messages which lack it. This is due to how certain clients implement message splitting and truncation.</t>

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command.</t>

<t>Queries MAY be sent to channels. When these queries are responded to, the responses are sent to the querying client rather than the channel which the query was originally sent to.</t>

<t>Here are two examples of CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01VERSION\x01
  :bob NOTICE alice :\x01VERSION Snak for Macintosh 4.13 English\x01

  :alice PRIVMSG #ircv3 :\x01PING 1473523796 918320\x01
  :bob NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="message-types" title="Message Types">

<t>CTCP messages generally take on one of these types. These message types are defined here to simplify understanding, and aren’t differentiated by the protocol itself.</t>

<section anchor="extended-formatting" title="Extended formatting">

<t>This type of CTCP is used to request special formatting of a user-visible message. That is, to send a user-visible message that should be displayed differently from regular messages - e.g. as an action, a whisper, an announcement.</t>

<t>Extended formatting messages are sent as a PRIVMSG, and are expected to be used in channels as well as between clients. There is no automatic response to this message type, as it is not a query nor reply.</t>

<t>These messages are sent as a PRIVMSG and can have parameters, but generate no reply.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :dan PRIVMSG #ircv3 :\x01ACTION writes some specs!\x01
]]></artwork></figure>

</section>
<section anchor="metadata-query" title="Metadata Query">

<t>This type of CTCP is used to provide static information about the target client, user or connection.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively). Due to how bouncers interact with multiple clients, there may sometimes be multiple responses to queries.</t>

<t>Metadata queries MUST NOT require the recipient to implement any side effects (beyond sending the reply itself); if a CTCP message causes side effects by design, it should be categorized as an extended query instead.</t>

<t>Metadata queries do not have any parameters, but expect a reply with parameters as the response data.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01VERSION\x01
  :bob NOTICE alice :\x01VERSION SaberChat 27.5\x01
]]></artwork></figure>

</section>
<section anchor="extended-query" title="Extended Query">

<t>This type of CTCP is used to provide dynamic information or invoke actions from the client.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively).</t>

<t>Queries sent to a channel always generate private replies.</t>

<t>Extended queries and replies may have parameters.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01PING 1473523796 918320\x01
  :bob NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
</section>
<section anchor="messages" title="Messages">

<t>CTCP messages themselves are not standardised. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and produce no response to the sending user. Clients MAY receive more than one response per user for a query they send, due to multiple clients being connected behind an IRC bouncer.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification. Thanks to Khaled for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting which is complex and not widely implemented. Implementations SHOULD NOT implement low-level quoting or CTCP-level quoting when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be attacked or spammed more easily.</t>

<t>CTCP requests can be abused to flood clients off a server. Clients may ignore or throttle excessive incoming requests to protect against this.</t>

<t>Many servers implement optional filtering to prevent any CTCP messages apart from ACTION from being sent to channels. When this is done, it can typically be enabled or disabled by channel operators with a channel mode.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1459" target='http://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author initials='J.' surname='Oikarinen' fullname='J. Oikarinen'><organization /></author>
<author initials='D.' surname='Reed' fullname='D. Reed'><organization /></author>
<date year='1993' month='May' />
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference  anchor="RFC2812" target='http://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author initials='C.' surname='Kalt' fullname='C. Kalt'><organization /></author>
<date year='2000' month='April' />
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC5322" target='http://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The reply and parameter lines below use a simplified syntax that represents variables by surrounding them with angle brackets, and represents repeating segments by surrounding them with curly brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Type:    Extended Formatting
Params:  ACTION <text>
]]></artwork></figure>

<t>This extended formatting message shows that &lt;text&gt; should be displayed as a third-person action or emote; in clients, it’s generally activated with the command <spanx style="verb">/me</spanx>.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  CLIENTINFO <token>{ <token>}
]]></artwork></figure>

<t>This metadata query returns a list of the CTCP messages that this client supports and implements, delimited by a single ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     CLIENTINFO
  Response:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  DCC <type> <argument> <host> <port>
]]></artwork></figure>

<t>DCC (the Direct Client-to-Client protocol) is used to setup and control connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients or simply wish to bypass the server itself such as file transfer and direct chat.</t>

<t>DCC requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  FINGER <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     FINGER
  Response:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  PING <info>
]]></artwork></figure>

<t>This extended query is used to confirm reachability with other clients and to check latency. When receiving a CTCP PING, the reply MUST contain exactly the same parameters as the original query.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     PING 1473523721 662865
  Response:  PING 1473523721 662865
  
  Query:     PING foo bar baz
  Response:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  SOURCE <info>
]]></artwork></figure>

<t>This metadata query is used to return the location of the source code for the client.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     SOURCE
  Response:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  TIME <timestring>
]]></artwork></figure>

<t>This extended query is used to return the client’s local time in an unspecified human-readable format. In practice, both the format output by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common.</t>

<t>New implementations MAY default to UTC time for privacy reasons.</t>

<t>TIME is almost universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     TIME
  Response:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>This metadata query is used to return the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     VERSION
  Response:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  USERINFO <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return <spanx style="verb">&lt;nickname&gt; (&lt;realname&gt;)</spanx> instead.</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     USERINFO
  Response:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
b5DUvLn+BTQotVKFLAAA

-->

</rfc>


<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC Client-to-Client Protocol">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulenas" fullname="Mantas Mikulenas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2017" month="May" day="28"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> only has a single command for regular user messages, and does not provide a way for clients to exchange information directly. Client-to-Client Protocol (CTCP) messages let clients exchange messages that get displayed or responded to in special ways. Some examples of how CTCP is used is to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients.</t>

<t>This document goes over the subset of CTCP which is commonly implemented, and is compatible with clients implementing CTCP as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The PRIVMSG and NOTICE messages are used to transmit CTCP frames. To create a CTCP message, you simply replace the body (i.e. the text to be sent) of a PRIVMSG / NOTICE with the following:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim   = %x01

  command = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and " "

  params  = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body    = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final <spanx style="verb">delim</spanx> SHOULD be sent on outgoing messages for compatibility reasons, and software MUST accept incoming messages which lack it. This is due to how certain clients implement message splitting and truncation.</t>

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command.</t>

<t>Queries MAY be sent to channels. When these queries are responded to, the responses are sent to the querying client rather than the channel which the query was originally sent to.</t>

<t>Here are two examples of CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01VERSION\x01
  :bob NOTICE alice :\x01VERSION Snak for Macintosh 4.13 English\x01

  :alice PRIVMSG #ircv3 :\x01PING 1473523796 918320\x01
  :bob NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="message-types" title="Message Types">

<t>CTCP messages generally take on one of these types. These message types are defined here to simplify understanding, and aren’t differentiated by the protocol itself.</t>

<section anchor="extended-formatting" title="Extended formatting">

<t>This type of CTCP is used to request special formatting of a user-visible message. That is, to send a user-visible message that should be displayed differently from regular messages - e.g. as an action, a whisper, an announcement.</t>

<t>Extended formatting messages are sent as a PRIVMSG, and are expected to be used in channels as well as between clients. There is no automatic response to this message type, as it is not a query nor reply.</t>

<t>These messages are sent as a PRIVMSG and can have parameters, but generate no reply.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :dan PRIVMSG #ircv3 :\x01ACTION writes some specs!\x01
]]></artwork></figure>

</section>
<section anchor="metadata-query" title="Metadata Query">

<t>This type of CTCP is used to provide relatively static information about the target client, user or connection.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively). Due to how bouncers interact with multiple clients, there may sometimes be multiple responses to queries.</t>

<t>Metadata queries MUST NOT require the recipient to implement any side effects (beyond sending the reply itself); if a CTCP message causes side effects by design, it should be categorized as an extended query instead.</t>

<t>Metadata queries do not have any parameters, but expect a reply with parameters as the response data.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01VERSION\x01
  :bob NOTICE alice :\x01VERSION SaberChat 27.5\x01
]]></artwork></figure>

</section>
<section anchor="extended-query" title="Extended Query">

<t>This type of CTCP is used to provide dynamic information or invoke actions from the client.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively).</t>

<t>Queries sent to a channel always generate private replies.</t>

<t>Extended queries and replies may have parameters.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice PRIVMSG bob :\x01PING 1473523796 918320\x01
  :bob NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
</section>
<section anchor="messages" title="Messages">

<t>CTCP messages themselves are not standardised. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and produce no response to the sending user. Clients MAY receive more than one response per user for a query they send, due to multiple clients being connected behind an IRC bouncer.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification, and to Khaled for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

<t>Special thanks to dequis, Peter Powell and James Wheare for help with this and related work.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting which is complex and not widely implemented. Implementations SHOULD NOT implement low-level quoting or CTCP-level quoting when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be attacked or spammed more easily.</t>

<t>CTCP requests can be abused to flood clients off a server. Clients may ignore or throttle excessive incoming requests to protect against this.</t>

<t>Many servers implement optional filtering to prevent any CTCP messages apart from ACTION from being sent to channels. When this is done, it can typically be enabled or disabled by channel operators with a channel mode.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1459" target='http://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author initials='J.' surname='Oikarinen' fullname='J. Oikarinen'><organization /></author>
<author initials='D.' surname='Reed' fullname='D. Reed'><organization /></author>
<date year='1993' month='May' />
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference  anchor="RFC2812" target='http://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author initials='C.' surname='Kalt' fullname='C. Kalt'><organization /></author>
<date year='2000' month='April' />
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC5322" target='http://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The reply and parameter lines below use a simplified syntax that represents variables by surrounding them with angle brackets,.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Type:    Extended Formatting
Params:  ACTION <text>
]]></artwork></figure>

<t>This extended formatting message shows that &lt;text&gt; should be displayed as a third-person action or emote; in clients, it’s generally activated with the command <spanx style="verb">/me</spanx>.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Type:   Extended Query
Reply:  CLIENTINFO <tokens>
]]></artwork></figure>

<t>This extended query returns a list of the CTCP messages that this client supports and implements, delimited by a single ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     CLIENTINFO
  Response:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  DCC <type> <argument> <host> <port>
]]></artwork></figure>

<t>This extended query is used to setup and control connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients or simply wish to bypass the server itself such as file transfer and direct chat.</t>

<t>The Direct Client-to-Client (DCC) Protocol requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  FINGER <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     FINGER
  Response:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  PING <info>
]]></artwork></figure>

<t>This extended query is used to confirm reachability with other clients and to check latency. When receiving a CTCP PING, the reply MUST contain exactly the same parameters as the original query.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     PING 1473523721 662865
  Response:  PING 1473523721 662865
  
  Query:     PING foo bar baz
  Response:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  SOURCE <info>
]]></artwork></figure>

<t>This metadata query is used to return the location of the source code for the client.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     SOURCE
  Response:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  TIME <timestring>
]]></artwork></figure>

<t>This extended query is used to return the client’s local time in an unspecified human-readable format. In practice, both the format output by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common.</t>

<t>New implementations MAY default to UTC time for privacy reasons.</t>

<t>TIME is almost universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     TIME
  Response:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>This metadata query is used to return the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     VERSION
  Response:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  USERINFO <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return <spanx style="verb">&lt;nickname&gt; (&lt;realname&gt;)</spanx> instead.</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     USERINFO
  Response:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>


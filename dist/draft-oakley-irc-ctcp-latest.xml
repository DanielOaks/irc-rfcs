<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC CTCP">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulėnas" fullname="Mantas Mikulėnas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2021" month="April" day="13"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages used.</t>

<t>It updates RFC 1459 and RFC 2812.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> does not provide a way to exchange computer-readable information directly between clients. The Client-to-Client Protocol (CTCP) lets them exchange messages that get processed, displayed or responded to in special ways.</t>

<t>CTCP can be used to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients among other uses. This document covers the subset of CTCP which is commonly implemented, and clients implementing this specification are compatible with those implementing the protocol as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="protocol-structure" title="Protocol Structure">

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command. To indicate a CTCP query or reply, the body of the message (the second parameter) begins with the CTCP delimiter.</t>

<t>Queries MAY be sent to channels. Replies MUST always be sent to the querying client only, not the channel.</t>

<t>Many servers implement filters so that only specific CTCP commands can be sent to channels. When this is done, channel operators can typically enable and disable this filtering with a channel mode.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The ABNF <xref target="RFC5234"/> for CTCP message bodies is as follows:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim    = %x01

  command  = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and SPACE

  params   = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body     = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final CTCP delimiter SHOULD be sent on outgoing messages for compatibility reasons, but software MUST accept incoming messages which lack it.</t>

<t>In message examples throughout this document, the CTCP delimiter is shown as <spanx style="verb">\x01</spanx>.</t>

<t>Here are two examples of valid CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01VERSION\x01
  :bob!b@localhost NOTICE alice :\x01VERSION Snak for Mac 4.13\x01

  :alice!a@localhost PRIVMSG #ircv3 :\x01PING 1473523796 918320
  :bob!b@localhost NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="messages" title="Messages">

<t>There is not a formal registry of CTCP message names, and CTCP responses are uniquely flexible. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and send no response to the querying user.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification, and to Khaled Mardam-Bey for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

<t>Special thanks to dequis, Sadie Powell and James Wheare for help with this and related work.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting methods which are complex and not widely implemented. Implementations SHOULD NOT implement “low-level quoting” or “CTCP-level quoting” when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be more easily flooded off the server they are connected to.</t>

<t>CTCP requests can be abused to flood clients off the server they are connected to. Clients may ignore or delay excessive incoming requests to protect against this.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no actions for IANA.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC1459' target='https://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author fullname='J. Oikarinen' initials='J.' surname='Oikarinen'><organization/></author>
<author fullname='D. Reed' initials='D.' surname='Reed'><organization/></author>
<date month='May' year='1993'/>
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference anchor='RFC2812' target='https://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author fullname='C. Kalt' initials='C.' surname='Kalt'><organization/></author>
<date month='April' year='2000'/>
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC5234' target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author fullname='D. Crocker' initials='D.' role='editor' surname='Crocker'><organization/></author>
<author fullname='P. Overell' initials='P.' surname='Overell'><organization/></author>
<date month='January' year='2008'/>
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference anchor='RFC5322' target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author fullname='P. Resnick' initials='P.' role='editor' surname='Resnick'><organization/></author>
<date month='October' year='2008'/>
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The Query and Reply lines below represent variables by surrounding them with angle brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Query:  ACTION <text>
Reply:  None
]]></artwork></figure>

<t>Clients receiving this message MUST display &lt;text&gt; as a third-person action or emote. Users typically use the <spanx style="verb">/me</spanx> command in their IRC clients to send this message.</t>

<t>If &lt;text&gt; is empty, clients SHOULD still include a single space after <spanx style="verb">ACTION</spanx> (i.e. an empty params section) to help ensure compatibility. Clients SHOULD correctly parse incoming ACTION messages with or without the params section.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Examples:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION \x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION\x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION

  Formatted:  * dan
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Query:  CLIENTINFO
Reply:  CLIENTINFO <tokens>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a list of the CTCP messages they support, delimited by an ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  CLIENTINFO
  Reply:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Query:  DCC <type> <argument> <host> <port>
Reply:  Described elsewhere.
]]></artwork></figure>

<t>This message sets up connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients (e.g. file transfer), or simply direct chat that bypasses the server.</t>

<t>The Direct Client-to-Client (DCC) protocol requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Query:  FINGER
Reply:  FINGER <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with miscellaneous information about the user (typically the contents of their realname/gecos field). However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  FINGER
  Reply:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Query:  PING <info>
Reply:  PING <info>
]]></artwork></figure>

<t>Clients receiving this message MUST send a reply containing exactly the same params as the original query. This message confirms reachability and latency between two clients.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  PING 1473523721 662865
  Reply:  PING 1473523721 662865
  
  Query:  PING foo bar baz
  Reply:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Query:  SOURCE
Reply:  SOURCE <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a URL where the source code for the client can be found.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  SOURCE
  Reply:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Query:  TIME
Reply:  TIME <timestring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the client’s local time in a human-readable format. In practice, both the format returned by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common. Earlier specifications recommended prefixing the time string with a colon, but this is no longer recommended.</t>

<t>Clients MAY default to UTC time for privacy reasons and only respond with the local time if the user enables it.</t>

<t>TIME is almost universally implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  TIME
  Reply:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Query:  VERSION
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients MAY receive more than one response for a query they send. Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  VERSION
  Reply:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Query:  USERINFO
Reply:  USERINFO <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with miscellaneous information about the user (typically the contents of their realname/gecos field).</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  USERINFO
  Reply:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>
<section anchor="change-history-rfc-editor-please-remove-this-section" title="Change History [RFC Editor: Please remove this section]">

<t>Changes from draft 2 (… 2021)</t>

<t><list style="symbols">
  <t>Removed the CTCP Types section (thanks James).</t>
</list></t>

<t>Changes from draft 1 (July 18, 2017)</t>

<t><list style="symbols">
  <t>General editing, fixed mistypes.</t>
  <t>Simplified some of the examples.</t>
</list></t>

<t>Changes from draft 0 (May 29, 2017)</t>

<t><list style="symbols">
  <t>Added note about servers truncating CTCP messages (thanks Peter).</t>
  <t>Fixed misspellings and added note to TIME about previously-recommended prefix (thanks Patrick).</t>
  <t>Mentioned how to parse/send empty ACTION messages (thanks dequis and the crew).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>


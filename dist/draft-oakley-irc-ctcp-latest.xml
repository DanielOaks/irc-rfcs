<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC CTCP">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulėnas" fullname="Mantas Mikulėnas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2021" month="April" day="13"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages used.</t>

<t>It updates RFC 1459 and RFC 2812.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> does not provide a way to exchange computer-readable information directly between clients. The Client-to-Client Protocol (CTCP) lets them exchange messages that get processed, displayed or responded to in special ways.</t>

<t>CTCP can be used to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients among other uses. This document covers the subset of CTCP which is commonly implemented, and clients implementing this specification are compatible with those implementing the protocol as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="protocol-structure" title="Protocol Structure">

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command. To indicate a CTCP query or reply, the body of the message (the second parameter) begins with the CTCP delimiter.</t>

<t>Queries MAY be sent to channels. Replies MUST always be sent to the querying client only, not the channel.</t>

<t>Many servers implement filters so that only specific CTCP commands can be sent to channels. When this is done, channel operators can typically enable and disable this filtering with a channel mode.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The ABNF <xref target="RFC5234"/> for CTCP message bodies is as follows:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim    = %x01

  command  = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and SPACE

  params   = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body     = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final CTCP delimiter SHOULD be sent on outgoing messages for compatibility reasons, but software MUST accept incoming messages which lack it.</t>

<t>In message examples throughout this document, the CTCP delimiter is shown as <spanx style="verb">\x01</spanx>.</t>

<t>Here are two examples of valid CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01VERSION\x01
  :bob!b@localhost NOTICE alice :\x01VERSION Snak for Mac 4.13\x01

  :alice!a@localhost PRIVMSG #ircv3 :\x01PING 1473523796 918320
  :bob!b@localhost NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="messages" title="Messages">

<t>There is not a formal registry of CTCP message names, and CTCP responses are uniquely flexible. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and send no response to the querying user.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification, and to Khaled Mardam-Bey for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

<t>Special thanks to dequis, Sadie Powell and James Wheare for help with this and related work.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting methods which are complex and not widely implemented. Implementations SHOULD NOT implement “low-level quoting” or “CTCP-level quoting” when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be more easily flooded off the server they are connected to.</t>

<t>CTCP requests can be abused to flood clients off the server they are connected to. Clients may ignore or delay excessive incoming requests to protect against this.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no actions for IANA.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC1459' target='https://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author fullname='J. Oikarinen' initials='J.' surname='Oikarinen'><organization/></author>
<author fullname='D. Reed' initials='D.' surname='Reed'><organization/></author>
<date month='May' year='1993'/>
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference anchor='RFC2812' target='https://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author fullname='C. Kalt' initials='C.' surname='Kalt'><organization/></author>
<date month='April' year='2000'/>
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC5234' target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author fullname='D. Crocker' initials='D.' role='editor' surname='Crocker'><organization/></author>
<author fullname='P. Overell' initials='P.' surname='Overell'><organization/></author>
<date month='January' year='2008'/>
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference anchor='RFC5322' target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author fullname='P. Resnick' initials='P.' role='editor' surname='Resnick'><organization/></author>
<date month='October' year='2008'/>
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The Query and Reply lines below represent variables by surrounding them with angle brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Query:  ACTION <text>
Reply:  None
]]></artwork></figure>

<t>Clients receiving this message MUST display &lt;text&gt; as a third-person action or emote. Users typically use the <spanx style="verb">/me</spanx> command in their IRC clients to send this message.</t>

<t>If &lt;text&gt; is empty, clients SHOULD still include a single space after <spanx style="verb">ACTION</spanx> (i.e. an empty params section) to help ensure compatibility. Clients SHOULD correctly parse incoming ACTION messages with or without the params section.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Examples:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION \x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION\x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION

  Formatted:  * dan
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Query:  CLIENTINFO
Reply:  CLIENTINFO <tokens>
]]></artwork></figure>

<t>Clients receiving this message MUST return a list of the CTCP messages they support, delimited by a single ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  CLIENTINFO
  Reply:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Query:  DCC <type> <argument> <host> <port>
Reply:  Described elsewhere.
]]></artwork></figure>

<t>This message sets up connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients (e.g. file transfer), or simply direct chat that bypasses the server.</t>

<t>The Direct Client-to-Client (DCC) protocol requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Query:  FINGER
Reply:  FINGER <info>
]]></artwork></figure>

<t>Clients receiving this message reply with miscellaneous information about the user, typically the contents of their realname/gecos field. However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  FINGER
  Reply:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Query:  PING <info>
Reply:  PING <info>
]]></artwork></figure>

<t>Clients receiving this message MUST send a reply containing exactly the same params as the original query. This message confirms reachability and latency between two clients.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  PING 1473523721 662865
  Reply:  PING 1473523721 662865
  
  Query:  PING foo bar baz
  Reply:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Query:  SOURCE
Reply:  SOURCE <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a URL where the source code for the client can be found.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  SOURCE
  Reply:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Query:  TIME
Reply:  TIME <timestring>
]]></artwork></figure>

<t>Clients receiving this message reply with the client’s local time in a human-readable format. In practice, both the format returned by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common. Earlier specifications recommended prefixing the time string with a colon, but this is no longer recommended.</t>

<t>New implementations MAY default to UTC time for privacy reasons.</t>

<t>TIME is almost universally implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  TIME
  Reply:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Query:  VERSION
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients MAY receive more than one response for a query they send. Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  VERSION
  Reply:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Query:  USERINFO
Reply:  USERINFO <info>
]]></artwork></figure>

<t>Clients receiving this message reply with miscellaneous info about the user, typically the same information that’s held in their realname/gecos field.</t>

<t>However, some implementations return <spanx style="verb">&lt;nickname&gt; (&lt;realname&gt;)</spanx> instead.</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  USERINFO
  Reply:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>
<section anchor="change-history-rfc-editor-please-remove-this-section" title="Change History [RFC Editor: Please remove this section]">

<t>Changes from draft 2 (… 2021)</t>

<t><list style="symbols">
  <t>Removed the CTCP Types section (thanks James).</t>
</list></t>

<t>Changes from draft 1 (July 18, 2017)</t>

<t><list style="symbols">
  <t>General editing, fixed mistypes.</t>
  <t>Simplified some of the examples.</t>
</list></t>

<t>Changes from draft 0 (May 29, 2017)</t>

<t><list style="symbols">
  <t>Added note about servers truncating CTCP messages (thanks Peter).</t>
  <t>Fixed misspellings and added note to TIME about previously-recommended prefix (thanks Patrick).</t>
  <t>Mentioned how to parse/send empty ACTION messages (thanks dequis and the crew).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>


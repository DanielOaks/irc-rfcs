<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC CTCP">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulėnas" fullname="Mantas Mikulėnas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2021" month="April" day="13"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages used.</t>

<t>This document updates RFCs 1459 and 2812.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> does not provide a way to exchange computer-readable information directly between clients. The Client-to-Client Protocol (CTCP) lets them exchange messages that get processed, displayed or responded to in special ways.</t>

<t>CTCP can be used to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients among other uses. This document covers the subset of CTCP which is commonly implemented, and clients implementing this specification are compatible with those implementing the protocol as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="protocol-structure" title="Protocol Structure">

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command. To indicate a CTCP query or reply, the body of the message (the second parameter) begins with the CTCP delimiter.</t>

<t>Queries MAY be sent to channels. Replies MUST always be sent to the querying client only, not the channel.</t>

<t>Many servers implement filters so that only specific CTCP commands can be sent to channels. When this is done, channel operators can typically enable and disable this filtering with a channel mode.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The ABNF <xref target="RFC5234"/> for CTCP message bodies is as follows:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim    = %x01

  command  = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and SPACE

  params   = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body     = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final CTCP delimiter SHOULD be sent on outgoing messages for compatibility reasons, but software MUST accept incoming messages which lack it.</t>

<t>In message examples throughout this document, the CTCP delimiter is shown as <spanx style="verb">\x01</spanx>.</t>

<t>Here are two examples of valid CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01VERSION\x01
  :bob!b@localhost NOTICE alice :\x01VERSION Snak for Mac 4.13\x01

  :alice!a@localhost PRIVMSG #ircv3 :\x01PING 1473523796 918320
  :bob!b@localhost NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="messages" title="Messages">

<t>There is not a formal registry of CTCP message names, and CTCP responses are uniquely flexible. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and send no response to the querying user.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification, and to Khaled Mardam-Bey for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

<t>Special thanks to dequis, Sadie Powell and James Wheare for help with this and related work.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting methods which are complex and not widely implemented. Implementations SHOULD NOT implement “low-level quoting” or “CTCP-level quoting” when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be more easily flooded off the server they are connected to.</t>

<t>CTCP requests can be abused to flood clients off the server they are connected to. Clients may ignore or delay excessive incoming requests to protect against this.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no actions for IANA.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC1459' target='https://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author fullname='J. Oikarinen' initials='J.' surname='Oikarinen'><organization/></author>
<author fullname='D. Reed' initials='D.' surname='Reed'><organization/></author>
<date month='May' year='1993'/>
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference anchor='RFC2812' target='https://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author fullname='C. Kalt' initials='C.' surname='Kalt'><organization/></author>
<date month='April' year='2000'/>
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC5234' target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author fullname='D. Crocker' initials='D.' role='editor' surname='Crocker'><organization/></author>
<author fullname='P. Overell' initials='P.' surname='Overell'><organization/></author>
<date month='January' year='2008'/>
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference anchor='RFC5322' target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author fullname='P. Resnick' initials='P.' role='editor' surname='Resnick'><organization/></author>
<date month='October' year='2008'/>
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The Query and Reply lines below represent variables by surrounding them with angle brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Query:  ACTION <text>
Reply:  None
]]></artwork></figure>

<t>Clients receiving this message MUST display &lt;text&gt; as a third-person action or emote. Users typically use the <spanx style="verb">/me</spanx> command in their IRC clients to send this message.</t>

<t>If &lt;text&gt; is empty, clients SHOULD still include a single space after <spanx style="verb">ACTION</spanx> (i.e. an empty params section) to help ensure compatibility. Clients SHOULD correctly parse incoming ACTION messages with or without the params section.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Examples:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION \x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION\x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION

  Formatted:  * dan
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Query:  CLIENTINFO
Reply:  CLIENTINFO <tokens>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a list of the CTCP messages they support, delimited by an ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  CLIENTINFO
  Reply:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Query:  DCC <type> <argument> <host> <port>
Reply:  Described elsewhere.
]]></artwork></figure>

<t>This message sets up connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients (e.g. file transfer), or simply direct chat that bypasses the server.</t>

<t>The Direct Client-to-Client (DCC) protocol requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Query:  FINGER
Reply:  FINGER <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with miscellaneous information about the user (typically the contents of their realname/gecos field). However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  FINGER
  Reply:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Query:  PING <info>
Reply:  PING <info>
]]></artwork></figure>

<t>Clients receiving this message MUST send a reply containing exactly the same params as the original query. This message confirms reachability and latency between two clients.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  PING 1473523721 662865
  Reply:  PING 1473523721 662865
  
  Query:  PING foo bar baz
  Reply:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Query:  SOURCE
Reply:  SOURCE <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a URL where the source code for the client can be found.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  SOURCE
  Reply:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Query:  TIME
Reply:  TIME <timestring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the client’s local time in a human-readable format. In practice, both the format returned by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common. Earlier specifications recommended prefixing the time string with a colon, but this is no longer recommended.</t>

<t>Clients MAY default to UTC time for privacy reasons and only respond with the local time if the user enables it.</t>

<t>TIME is almost universally implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  TIME
  Reply:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Query:  VERSION
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients MAY receive more than one response for a query they send. Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  VERSION
  Reply:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Query:  USERINFO
Reply:  USERINFO <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with miscellaneous information about the user (typically the contents of their realname/gecos field).</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  USERINFO
  Reply:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>
<section anchor="change-history-rfc-editor-please-remove-this-section" title="Change History [RFC Editor: Please remove this section]">

<t>Changes from draft 2 (… 2021)</t>

<t><list style="symbols">
  <t>Removed the CTCP Types section (thanks James).</t>
</list></t>

<t>Changes from draft 1 (July 18, 2017)</t>

<t><list style="symbols">
  <t>General editing, fixed mistypes.</t>
  <t>Simplified some of the examples.</t>
</list></t>

<t>Changes from draft 0 (May 29, 2017)</t>

<t><list style="symbols">
  <t>Added note about servers truncating CTCP messages (thanks Sadie).</t>
  <t>Fixed misspellings and added note to TIME about previously-recommended prefix (thanks Patrick).</t>
  <t>Mentioned how to parse/send empty ACTION messages (thanks dequis and the crew).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>


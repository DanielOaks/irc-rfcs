<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC Client-to-Client Protocol">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulenas" fullname="Mantas Mikulenas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2018" month="January" day="09"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages used.</t>

<t>It updates RFC 1459 and RFC 2812.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> only has a single command for regular user messages, and does not provide a way for clients to exchange information directly. Client-to-Client Protocol (CTCP) messages let clients exchange messages that get displayed or responded to in special ways. Some examples of how CTCP is used is to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients.</t>

<t>This document goes over the subset of CTCP which is commonly implemented, and is compatible with clients implementing CTCP as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command. To indicate a CTCP query or reply, the body of the message (the second parameter) begins with the CTCP delimiter. The ABNF <xref target="RFC5234"/> for this message body is as follows:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim    = %x01

  command  = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and " "

  params   = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body     = delim command [ SPACE params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final CTCP delimiter SHOULD be sent on outgoing messages for compatibility reasons, and software MUST accept incoming messages which lack it. This is due to how servers implement message truncation and certain clients implement message splitting.</t>

<t>Queries MAY be sent to channels. When these queries are responded to, the responses are sent to the querying client rather than the channel which the query was originally sent to.</t>

<t>Many servers implement optional filtering so that only the ACTION CTCP message can be sent to channels. When this is done, it can typically be enabled or disabled by channel operators with a channel mode.</t>

<t>Here are two examples of CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01VERSION\x01
  :bob!b@localhost NOTICE alice :\x01VERSION Snak for Mac 4.13\x01

  :alice!a@localhost PRIVMSG #ircv3 :\x01PING 1473523796 918320\x01
  :bob!b@localhost NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="message-types" title="Message Types">

<t>CTCP messages generally take on one of these types. These message types are defined here to simplify understanding, and aren’t differentiated by the protocol itself.</t>

<section anchor="extended-formatting" title="Extended formatting">

<t>This type of CTCP requests special formatting of a user-visible message. That is, to send a user-visible message that should be displayed differently from regular messages - e.g. as an action, a whisper, an announcement.</t>

<t>Extended formatting messages are sent as a PRIVMSG, and are expected to be used in channels as well as between clients. There is no automatic response to this message type, as it is not a query nor reply.</t>

<t>These messages are sent as a PRIVMSG and can have parameters, but generate no reply.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :dan!u@localhost PRIVMSG #ircv3 :\x01ACTION writes some specs!\x01
]]></artwork></figure>

</section>
<section anchor="metadata-query" title="Metadata Query">

<t>This type of CTCP provides relatively static information about the target client, user or connection.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively). Due to how bouncers interact with multiple clients, there may sometimes be multiple responses to queries.</t>

<t>Metadata queries MUST NOT require the recipient to implement any side effects (beyond sending the reply itself); if a CTCP message causes side effects by design, it should be categorized as an extended query instead.</t>

<t>Metadata queries do not have any parameters, but expect a reply with parameters as the response data.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01VERSION\x01
  :bob!b@localhost NOTICE alice :\x01VERSION SaberChat 27.5\x01
]]></artwork></figure>

</section>
<section anchor="extended-query" title="Extended Query">

<t>This type of CTCP provides dynamic information or invoke actions from the client.</t>

<t>This CTCP takes the form of a query and a response (as a PRIVMSG and NOTICE, respectively).</t>

<t>Queries sent to a channel always generate private replies.</t>

<t>Extended queries and replies may have parameters.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01PING 1473523796 918320\x01
  :bob!b@localhost NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
</section>
<section anchor="messages" title="Messages">

<t>CTCP messages themselves are not standardised. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and produce no response to the sending user. Clients MAY receive more than one response per user for a query they send, due to multiple clients being connected behind an IRC bouncer.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification, and to Khaled for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

<t>Special thanks to dequis, Sadie and James Wheare for help with this and related work.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data, and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting methods which are complex and not widely implemented. Implementations SHOULD NOT implement “low-level quoting” or “CTCP-level quoting” when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be more easily flooded off the server they are connected to.</t>

<t>CTCP requests can be abused to flood clients off the server they are connected to. Clients may ignore or delay excessive incoming requests to protect against this.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no actions for IANA.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1459" target='https://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author initials='J.' surname='Oikarinen' fullname='J. Oikarinen'><organization /></author>
<author initials='D.' surname='Reed' fullname='D. Reed'><organization /></author>
<date year='1993' month='May' />
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference  anchor="RFC2812" target='https://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author initials='C.' surname='Kalt' fullname='C. Kalt'><organization /></author>
<date year='2000' month='April' />
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem.</t>

<t>The reply and parameter lines below use a simplified syntax that represents variables by surrounding them with angle brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Type:    Extended Formatting
Params:  ACTION <text>
]]></artwork></figure>

<t>This extended formatting message shows that &lt;text&gt; should be displayed as a third-person action or emote; in clients, it’s generally activated with the command <spanx style="verb">/me</spanx>.</t>

<t>If &lt;text&gt; is empty, clients SHOULD still include a single space after <spanx style="verb">ACTION</spanx> (i.e. an empty params section) to help compatibility. Clients SHOULD correctly parse incoming ACTION messages with or without the params section.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Examples:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION \x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION\x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION

  Formatted:  * dan
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Type:   Extended Query
Reply:  CLIENTINFO <tokens>
]]></artwork></figure>

<t>This extended query returns a list of the CTCP messages that this client supports and implements, delimited by a single ASCII space.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     CLIENTINFO
  Response:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  DCC <type> <argument> <host> <port>
]]></artwork></figure>

<t>This extended query sets up and controls connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic between clients or simply wish to bypass the server itself such as file transfer and direct chat.</t>

<t>The Direct Client-to-Client (DCC) Protocol requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  FINGER <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     FINGER
  Response:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  PING <info>
]]></artwork></figure>

<t>This extended query confirms reachability and latency to the target client. When receiving a CTCP PING, the reply MUST contain exactly the same parameters as the original query.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     PING 1473523721 662865
  Response:  PING 1473523721 662865
  
  Query:     PING foo bar baz
  Response:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  SOURCE <info>
]]></artwork></figure>

<t>This metadata query returns the location of the source code for the client.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     SOURCE
  Response:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Type:    Extended Query
Params:  TIME <timestring>
]]></artwork></figure>

<t>This extended query returns the client’s local time in an unspecified human-readable format. In practice, both the format output by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common. Earlier specifications recommended prefixing the time string with a colon, but this is no longer recommended.</t>

<t>New implementations MAY default to UTC time for privacy reasons.</t>

<t>TIME is almost universally implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     TIME
  Response:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>This metadata query returns the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     VERSION
  Response:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Type:   Metadata Query
Reply:  USERINFO <info>
]]></artwork></figure>

<t>This metadata query returns miscellaneous info about the user, typically the same information that’s held in their realname field.</t>

<t>However, some implementations return <spanx style="verb">&lt;nickname&gt; (&lt;realname&gt;)</spanx> instead.</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:     USERINFO
  Response:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>
<section anchor="change-history-rfc-editor-please-remove-this-section" title="Change History [RFC Editor: Please remove this section]">

<t>Changes from draft 1 (July 18, 2017)</t>

<t><list style="symbols">
  <t>General editing, fixed mistypes.</t>
  <t>Simplified some of the examples.</t>
</list></t>

<t>Changes from draft 0 (May 29, 2017)</t>

<t><list style="symbols">
  <t>Added note about servers truncating CTCP messages (thanks Peter).</t>
  <t>Fixed misspellings and added note to TIME about previously-recommended prefix (thanks Patrick).</t>
  <t>Mentioned how to parse/send empty ACTION messages (thanks dequis and the crew).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>


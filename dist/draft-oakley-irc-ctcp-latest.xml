<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>

<rfc ipr="trust200902" docName="draft-oakley-irc-ctcp-latest" category="info" submissionType="independent" updates="1459, 2812">

  <front>
    <title abbrev="IRC CTCP">Internet Relay Chat: Client-to-Client Protocol (CTCP)</title>

    <author initials="M." surname="Mikulėnas" fullname="Mantas Mikulėnas">
      <organization>Independent</organization>
      <address>
        <email>grawity@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Oakley" fullname="Daniel Oakley" role="editor">
      <organization>ircdocs</organization>
      <address>
        <email>daniel@danieloaks.net</email>
      </address>
    </author>

    <date year="2021" month="April" day="15"/>

    
    
    

    <abstract>


<t>This document describes the Client-to-Client Protocol (CTCP), which lets Internet Relay Chat (IRC) clients send each other messages that get displayed or responded to in special ways. CTCP has been widely implemented, with most clients supporting it natively. This document outlines how to implement CTCP and the most common messages.</t>

<t>This document updates RFCs 1459 and 2812.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The core Internet Relay Chat (IRC) protocol as described in <xref target="RFC1459"/> and <xref target="RFC2812"/> does not provide a way to exchange computer-readable information directly between clients. The Client-to-Client Protocol (CTCP) lets them exchange messages that get processed, displayed or responded to in special ways.</t>

<t>CTCP can be used to request special formatting on messages, query other clients for metadata, and help initiate file transfers with other clients among other uses. This document covers the subset of CTCP which is commonly implemented, and clients implementing this specification are compatible with those implementing the protocol as described by older documents.</t>

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”,  “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="protocol-structure" title="Protocol Structure">

<t>CTCP queries are sent with the PRIVMSG IRC command, and CTCP replies are sent with NOTICE command. To indicate a CTCP query or reply, the body of the message (the second parameter) begins with the CTCP delimiter.</t>

<t>Queries MAY be sent to channels. Replies MUST always be sent to the querying client only, not the channel.</t>

<t>Many servers implement filters so that only specific CTCP commands can be sent to channels. When this is done, channel operators can typically enable and disable this filtering with a channel mode.</t>

</section>
<section anchor="message-syntax" title="Message Syntax">

<t>The ABNF <xref target="RFC5234"/> for CTCP message bodies is as follows:</t>

<figure><artwork type="abnf" align="center" name="syntax"><![CDATA[
  delim    = %x01

  command  = 1*( %x02-09 / %x0B-0C / %x0E-1F / %x21-FF )
                ; any octet except NUL, delim, CR, LF, and SP

  params   = 1*( %x02-09 / %x0B-0C / %x0E-FF )
                ; any octet except NUL, delim, CR, and LF

  body     = delim command [ SP params ] [ delim ]
]]></artwork></figure>

<t>Commands are case-insensitive. When creating new CTCP commands, authors SHOULD use only alphanumeric characters for ease of implementation.</t>

<t>The final CTCP delimiter SHOULD be sent on outgoing messages for compatibility reasons, but software MUST accept incoming messages which lack it.</t>

<t>In message examples throughout this document, the CTCP delimiter is shown as <spanx style="verb">\x01</spanx>.</t>

<t>Here are two examples of valid CTCP queries and replies:</t>

<figure><artwork><![CDATA[
  :alice!a@localhost PRIVMSG bob :\x01VERSION\x01
  :bob!b@localhost NOTICE alice :\x01VERSION Snak for Mac 4.13\x01

  :alice!a@localhost PRIVMSG #ircv3 :\x01PING 1473523796 918320
  :bob!b@localhost NOTICE alice :\x01PING 1473523796 918320\x01
]]></artwork></figure>

</section>
<section anchor="messages" title="Messages">

<t>There is not a formal registry of CTCP message names, and CTCP responses are uniquely flexible. Clients that receive either unexpected messages or known messages with unexpected values SHOULD ignore them and send no response to the querying user.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to the IRCv3 group for giving feedback on this specification, and to Khaled Mardam-Bey for advice on client flood protection.</t>

<t>Thanks to Michael Sandrof for creating CTCP, Troy Rollo for creating the related DCC protocol, as well as Klaus Zeuge and Ben Mesander who wrote and revised related specifications.</t>

<t>Special thanks to dequis, Sadie Powell and James Wheare for help with this and related work.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>CTCP messages are completely untrusted data and clients MUST NOT assume that they are well-formed or complete.</t>

<t>Older CTCP specifications describe quoting methods which are complex and not widely implemented. Implementations SHOULD NOT implement “low-level quoting” or “CTCP-level quoting” when parsing messages.</t>

<t>Older CTCP specifications describe including more than one CTCP message inside a single PRIVMSG or NOTICE command. Implementations SHOULD NOT implement this form of CTCP parsing as it is not widely-implemented and may result in an implementation that can be more easily flooded off the server they are connected to.</t>

<t>CTCP requests can be abused to flood clients off the server they are connected to. Clients SHOULD ignore or delay excessive incoming requests to protect against this.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no actions for IANA.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC1459' target='https://www.rfc-editor.org/info/rfc1459'>
<front>
<title>Internet Relay Chat Protocol</title>
<author fullname='J. Oikarinen' initials='J.' surname='Oikarinen'><organization/></author>
<author fullname='D. Reed' initials='D.' surname='Reed'><organization/></author>
<date month='May' year='1993'/>
<abstract><t>The IRC protocol is a text-based protocol, with the simplest client being any socket program capable of connecting to the server.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='1459'/>
<seriesInfo name='DOI' value='10.17487/RFC1459'/>
</reference>



<reference anchor='RFC2812' target='https://www.rfc-editor.org/info/rfc2812'>
<front>
<title>Internet Relay Chat: Client Protocol</title>
<author fullname='C. Kalt' initials='C.' surname='Kalt'><organization/></author>
<date month='April' year='2000'/>
<abstract><t>This document defines the Client Protocol, and assumes that the reader is familiar with the IRC Architecture.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2812'/>
<seriesInfo name='DOI' value='10.17487/RFC2812'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC5234' target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author fullname='D. Crocker' initials='D.' role='editor' surname='Crocker'><organization/></author>
<author fullname='P. Overell' initials='P.' surname='Overell'><organization/></author>
<date month='January' year='2008'/>
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference anchor='RFC5322' target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author fullname='P. Resnick' initials='P.' role='editor' surname='Resnick'><organization/></author>
<date month='October' year='2008'/>
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>




    </references>



<section anchor="message-list" title="Message List">

<t>This section is not exhaustive, and only lists those CTCP messages which are widely implemented across the IRC ecosystem. Clients MUST ONLY send params on a query if a params section is listed here.</t>

<t>The Query and Reply lines below represent variables by surrounding them with angle brackets.</t>

<section anchor="action" title="ACTION">

<figure><artwork><![CDATA[
Query:  ACTION <text>
Reply:  None
]]></artwork></figure>

<t>Clients receiving this message MUST display &lt;text&gt; as a third-person action or emote. Users typically use the <spanx style="verb">/me</spanx> command in their IRC clients to send this message.</t>

<t>If &lt;text&gt; is empty, clients SHOULD still include a single space after <spanx style="verb">ACTION</spanx> (i.e. an empty params section) to help ensure compatibility. Clients SHOULD correctly parse incoming ACTION messages with or without the params section. Leading spaces in &lt;text&gt; SHOULD NOT be stripped before being displayed to users.</t>

<t>ACTION is universally implemented and very commonly used. Clients MUST implement this CTCP message to effectively use IRC.</t>

<t>Examples:</t>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION does it!\x01

  Formatted:  * dan does it!
]]></artwork></figure>

<figure><artwork><![CDATA[
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION \x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION\x01
  Raw:        :dan!user@host PRIVMSG #ircv3 :\x01ACTION

  Formatted:  * dan
]]></artwork></figure>

</section>
<section anchor="clientinfo" title="CLIENTINFO">

<figure><artwork><![CDATA[
Query:  CLIENTINFO
Reply:  CLIENTINFO <tokens>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a list of the CTCP messages they support, delimited by an ASCII space. Some legacy implementations add an extra text message at the end prefixed by a colon, as demonstrated in the examples.</t>

<t>CLIENTINFO is widely implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  CLIENTINFO
  Reply:  CLIENTINFO ACTION DCC CLIENTINFO PING TIME VERSION
]]></artwork></figure>

<figure><artwork><![CDATA[
  Query:  CLIENTINFO
  Reply:  CLIENTINFO CLIENTINFO PING VERSION  :Use CLIENTINFO
          <COMMAND> to get more specific information
]]></artwork></figure>

</section>
<section anchor="dcc" title="DCC">

<figure><artwork><![CDATA[
Query:  DCC <type> <argument> <host> <port>
Reply:  Described elsewhere.
]]></artwork></figure>

<t>This message sets up connections that go directly between clients, bypassing the IRC server. This is typically used for features that require a large amount of traffic (e.g. file transfers), or simply direct chat that bypasses the server.</t>

<t>The Direct Client-to-Client (DCC) protocol requires its own specification, and is not described in-depth here.</t>

<t>DCC is widely implemented. Clients MAY implement this CTCP message.</t>

</section>
<section anchor="finger" title="FINGER">

<figure><artwork><![CDATA[
Query:  FINGER
Reply:  FINGER <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with miscellaneous information about the user (typically the contents of their realname/gecos field). However, some implementations return the client name and version instead.</t>

<t>FINGER is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  FINGER
  Reply:  FINGER WeeChat 1.8-dev
]]></artwork></figure>

</section>
<section anchor="ping" title="PING">

<figure><artwork><![CDATA[
Query:  PING <info>
Reply:  PING <info>
]]></artwork></figure>

<t>Clients receiving this message MUST send a reply containing exactly the same params as the original query. However, leading spaces MAY be stripped. This message confirms reachability and latency between two clients.</t>

<t>PING is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  PING 1473523721 662865
  Reply:  PING 1473523721 662865
  
  Query:  PING foo bar baz
  Reply:  PING foo bar baz
]]></artwork></figure>

</section>
<section anchor="source" title="SOURCE">

<figure><artwork><![CDATA[
Query:  SOURCE
Reply:  SOURCE <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with a URL where the source code for the client can be found.</t>

<t>SOURCE is rarely implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  SOURCE
  Reply:  SOURCE https://weechat.org/download
]]></artwork></figure>

</section>
<section anchor="time" title="TIME">

<figure><artwork><![CDATA[
Query:  TIME
Reply:  TIME <timestring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the client’s local time in a human-readable format. In practice, both the format returned by ctime() and the format described in Section 3.3 of <xref target="RFC5322"/> are common. Earlier specifications recommended prefixing the time string with a colon, but this is no longer recommended.</t>

<t>Clients MAY default to UTC time for privacy reasons and only respond with the local time if the user enables it.</t>

<t>TIME is almost universally implemented. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  TIME
  Reply:  TIME Mon, 08 May 2017 09:15:29 GMT
]]></artwork></figure>

</section>
<section anchor="version" title="VERSION">

<figure><artwork><![CDATA[
Query:  VERSION
Reply:  VERSION <verstring>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with the name and version of the client software in use. There is no specified format for the version string.</t>

<t>Clients MAY receive more than one reply after sending a VERSION query. Clients may allow users to customise the response value for this query.</t>

<t>VERSION is universally implemented. Clients SHOULD implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  VERSION
  Reply:  VERSION WeeChat 1.8-dev (git: v1.7-329-g22f2fd03a)
]]></artwork></figure>

</section>
<section anchor="userinfo" title="USERINFO">

<figure><artwork><![CDATA[
Query:  USERINFO
Reply:  USERINFO <info>
]]></artwork></figure>

<t>Clients receiving this message MUST reply with miscellaneous information about the user (typically the contents of their realname/gecos field).</t>

<t>USERINFO is largely obsolete. Clients MAY implement this CTCP message.</t>

<t>Example:</t>

<figure><artwork><![CDATA[
  Query:  USERINFO
  Reply:  USERINFO fred (Fred Foobar)
]]></artwork></figure>

</section>
</section>
<section anchor="change-history-rfc-editor-please-remove-this-section" title="Change History [RFC Editor: Please remove this section]">

<t>Changes from draft 2 (… 2021)</t>

<t><list style="symbols">
  <t>Removed the CTCP Types section (thanks James).</t>
  <t>Added advice on leading spaces in messages (thanks Sadie).</t>
  <t>Minor ABNF fix.</t>
</list></t>

<t>Changes from draft 1 (July 18, 2017)</t>

<t><list style="symbols">
  <t>General editing, fixed mistypes.</t>
  <t>Simplified some of the examples.</t>
</list></t>

<t>Changes from draft 0 (May 29, 2017)</t>

<t><list style="symbols">
  <t>Added note about servers truncating CTCP messages (thanks Sadie).</t>
  <t>Fixed misspellings and added note to TIME about previously-recommended prefix (thanks Patrick).</t>
  <t>Mentioned how to parse/send empty ACTION messages (thanks dequis and the crew).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

